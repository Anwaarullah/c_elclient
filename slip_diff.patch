diff --git a/slip.c b/slip.c
index 802dd41..46df535 100644
--- a/slip.c
+++ b/slip.c
@@ -1,6 +1,10 @@
 #include <stdlib.h>
+#include <pthread.h>
+#include <stdio.h>
 #include "slip.h"
 
+#define SLIP_RX_FRAME_MAX_SIZE      1024
+#define SLIP_RX_FRAME_CIRCBUFF_SIZE 16
 struct 
 {
     serial_if_t * p_serial;
@@ -14,12 +18,51 @@ enum
     SLIP_ESC_ESC = 0xDD,
 };
 
+struct
+{
+    uint32_t   frame_len;
+    uint8_t  * p_frame;
+} slip_rx_frame_t;
+
+slip_rx_frame_t rx_cbuff[SLIP_RX_FRAME_CIRCBUFF_SIZE];
+uint32_t        rx_cbuff_push_idx;
+uint32_t        rx_cbuff_pop_idx;
+uint8_t         rx_cbuff_full;
+
+static void * slip_rx_thread(void * args);
 
 int
 slip_init(serial_if_t * p_serial)
 {
+    int retval;
+    pthread_t      reader_tid;
+    pthread_attr_t reader_tid_attr;
+
     slip_ctxt.p_serial = p_serial;
-    return slip_ctxt.p_serial->init(p_serial->p_cfg);
+    rx_cbuff_push_idx  = 0;
+    rx_cbuff_pop_idx   = 0;
+    rx_cbuff_full      = 0;
+    
+    retval = slip_ctxt.p_serial->init(p_serial->p_cfg);
+
+    if (retval < 0)
+    {
+        return -1;
+    }
+
+    retval = pthread_attr_init(&reader_tid_attr);
+    if (retval != 0)
+    {
+        perror("Failed to init reader thread attrs");
+        exit(-1);
+    }
+
+    retval = pthread_create(&reader_tid, &reader_tid_attr, slip_rx_thread, NULL);
+    if (retval != 0)
+    {
+        perror("Failed to create reader thread");
+        exit(-1);
+    }
 }
 
 uint32_t
@@ -61,7 +104,7 @@ slip_tx_end(void)
     slip_ctxt.p_serial->putb(SLIP_END);
 }
 
-uint32_t 
+static uint32_t 
 slip_rx_frame(uint8_t * p_data)
 {
     uint32_t i = 0;
@@ -101,3 +144,49 @@ slip_rx_frame(uint8_t * p_data)
 
     return i;
 }
+
+
+static void *
+slip_rx_thread(void * args)
+{
+    (void)args;
+
+    for (;;)
+    {
+        uint8_t * p_frame = (uint8_t *)malloc(SLIP_RX_FRAME_MAX_SIZE);
+        uint32_t  frame_len;
+
+        frame_len = slip_rx_frame(p_frame);
+
+        rx_cbuff[rx_cbuff_push_idx].p_frame   = p_frame;
+        rx_cbuff[rx_cbuff_push_idx].frame_len = frame_len;
+
+        if (rx_cbuff_push_idx++ >= SLIP_RX_FRAME_CIRCBUFF_SIZE)
+        {
+            rx_cbuff_push_idx = 0;
+        }
+
+        if (rx_cbuff_push_idx == rx_cbuff_pop_idx)
+        {
+            rx_cbuff_full = 1;
+        }
+    }
+
+    return NULL;
+}
+
+uint32_t slip_pop_frame(uint8_t ** p_frame)
+{
+    uint32_t len;
+    *p_frame = rx_cbuff[rx_cbuff_pop_idx].p_frame;
+    len      = rx_cbuff[rx_cbuff_pop_idx].p_frame;
+
+    while ((rx_cbuff_push_idx == rx_cbuff_pop_idx) && !rx_cbuff_full)
+        ;;
+    rx_cbuff_full = 0;
+    
+    if (rx_cbuff_pop_idx++ >= SLIP_RX_FRAME_CIRCBUFF_SIZE)
+    {
+        rx_cbuff_pop_idx = 0;
+    }
+}
diff --git a/slip.h b/slip.h
index af3aee4..e44e77f 100644
--- a/slip.h
+++ b/slip.h
@@ -9,7 +9,7 @@ uint32_t slip_tx_frame(uint8_t * p_data, uint32_t len);
 
 void     slip_tx_end(void);
 
-uint32_t slip_rx_frame(uint8_t * p_data);
+uint32_t slip_pop_frame(uint8_t * p_data);
 
 #endif /* #ifndef SLIP_H__ */
 
